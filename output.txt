WARNING:tensorflow:From /home/yizzhang/converse_gan/utils.py:271: calling reduce_sum (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.
Instructions for updating:
keep_dims is deprecated, use keepdims instead
2019-08-07 19:08:23.888465: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-08-07 19:08:24.766350: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 0 with properties: 
name: Tesla P100-PCIE-16GB major: 6 minor: 0 memoryClockRate(GHz): 1.3285
pciBusID: 3735:00:00.0
totalMemory: 15.90GiB freeMemory: 15.64GiB
2019-08-07 19:08:24.766398: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1471] Adding visible gpu devices: 0
2019-08-07 19:08:25.165964: I tensorflow/core/common_runtime/gpu/gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-08-07 19:08:25.166019: I tensorflow/core/common_runtime/gpu/gpu_device.cc:958]      0 
2019-08-07 19:08:25.166029: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   N 
2019-08-07 19:08:25.166126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 15466 MB memory) -> physical GPU (device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 3735:00:00.0, compute capability: 6.0)
INFO:tensorflow:Restoring parameters from ./save/gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi
Namespace(continuing=False, gpuid=0, learning_rate=0.0001, mi=0.1, pg=False, sup=0.001, testflag=True, twoside=True)
Use model cnn_rnn
Use 3 conv/deconv layers
Use model cnn_rnn
Use 3 conv/deconv layers
{'restore': True, 'layer': 3, 'n_z': 10, 'fix_emb': False, 'log_path': './loggan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'sent_len2': 27, 'n_words': 20002, 'is_subtract_mean': False, 'lambda_sup_G': 0.001, 'sent_len4': 4, 'filter_size': 300, 'dropout_ratio': 1, 'n_d_output': 100, 'embedding_path_lime': './data/GoogleNews-vectors-negative300.bin.p', 'max_epochs': 1, 'd_freq': 1, 'feature_matching': 'pair_diff', 'grad_penalty': None, 'save_freq': 100000, 'reuse_cnn': False, 'two_side': True, 'n_hid': 100, 'stride': [2, 2, 2], 'discrimination': False, 'embed_size': 300, 'filter_shape': 5, 'rnn_share_emb': True, 'load_path': './save/gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'substitution': 's', 'decay_rate': 0.9999, 'is_corpus': False, 'lambda_MI': 0.1, 'save_path': './save/gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'load_from_ae': False, 'dropout': False, 'bp_truncation': None, 'decode_epsilon': 0, 'optimizer': 'Adam', 'w_gan': False, 'is_fed_h': True, 'valid_freq': 20000, 'attentive_emb': False, 'L': 1000, 'lr_d': 0.0001, 'sigma_range': [1], 'relu_w': False, 'lr_g': 0.0001, 'batch_size': 32, 'g_freq': 1, 'multiplier': 2, 'lambda_backward': 0.5, 'clip_grad': None, 'MI_pg': False, 'g_fix': False, 'fake_size': 32, 'W_emb': None, 'cnn_W': None, 'name': 'gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'tanh': False, 'test_freq': 1, 'print_freq': 100, 'cnn_b': None, 'sent_len': 57, 'data_size': None, 'g_rev': False, 'embedding_path': './data/GoogleNews-vectors-negative300.bin', 'sent_len3': 12, 'permutation': 0, 'additive_noise_lambda': 0.0, 'model': 'cnn_rnn', 'maxlen': 49, 'batch_norm': False}
{'restore': True, 'layer': 3, 'n_z': 10, 'fix_emb': False, 'log_path': './loggan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'sent_len2': 25, 'n_words': 20002, 'is_subtract_mean': False, 'lambda_sup_G': 0.001, 'sent_len4': 4, 'filter_size': 300, 'dropout_ratio': 1, 'n_d_output': 100, 'embedding_path_lime': './data/GoogleNews-vectors-negative300.bin.p', 'max_epochs': 1, 'd_freq': 1, 'feature_matching': 'pair_diff', 'grad_penalty': None, 'save_freq': 100000, 'reuse_cnn': False, 'two_side': True, 'n_hid': 100, 'stride': [2, 2, 2], 'discrimination': False, 'embed_size': 300, 'filter_shape': 5, 'rnn_share_emb': True, 'load_path': './save/gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'substitution': 's', 'decay_rate': 0.9999, 'is_corpus': False, 'lambda_MI': 0.1, 'save_path': './save/gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'load_from_ae': False, 'dropout': False, 'bp_truncation': None, 'decode_epsilon': 0, 'optimizer': 'Adam', 'w_gan': False, 'is_fed_h': True, 'valid_freq': 20000, 'attentive_emb': False, 'L': 1000, 'lr_d': 0.0001, 'sigma_range': [1], 'relu_w': False, 'lr_g': 0.0001, 'batch_size': 32, 'g_freq': 1, 'multiplier': 2, 'lambda_backward': 0.5, 'clip_grad': None, 'MI_pg': False, 'g_fix': False, 'fake_size': 32, 'W_emb': None, 'cnn_W': None, 'name': 'gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi', 'tanh': False, 'test_freq': 1000, 'print_freq': 100, 'cnn_b': None, 'sent_len': 53, 'data_size': None, 'g_rev': False, 'embedding_path': './data/GoogleNews-vectors-negative300.bin', 'sent_len3': 11, 'permutation': 0, 'additive_noise_lambda': 0.0, 'model': 'cnn_rnn', 'maxlen': 45, 'batch_norm': False}
Total words: 20002
Loading variables from './save/gan100_dim_cnn_rnn_pair_diff_gan_twoside_mi'.
Loaded variables:[u'd_embed/W:0', u'd_src_H1_3/weights:0', u'd_src_H1_3/biases:0', u'd_src_H2_3/weights:0', u'd_src_H2_3/biases:0', u'd_src_H3_3/weights:0', u'd_src_H3_3/biases:0', u'd_tgt_H1_3/weights:0', u'd_tgt_H1_3/biases:0', u'd_tgt_H2_3/weights:0', u'd_tgt_H2_3/biases:0', u'd_tgt_H3_3/weights:0', u'd_tgt_H3_3/biases:0', u'g_embed/W:0', u'g_H1_3/weights:0', u'g_H1_3/biases:0', u'g_H2_3/weights:0', u'g_H2_3/biases:0', u'g_H3_3/weights:0', u'g_H3_3/biases:0', u'g_lstm_decoder/weights:0', u'g_lstm_decoder/biases:0', u'g_lstm_decoder/W:0', u'g_lstm_decoder/b:0', u'g_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/kernel:0', u'g_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/bias:0', u'g_rev_embed/W:0', u'g_rev_H1_3/weights:0', u'g_rev_H1_3/biases:0', u'g_rev_H2_3/weights:0', u'g_rev_H2_3/biases:0', u'g_rev_H3_3/weights:0', u'g_rev_H3_3/biases:0', u'g_rev_lstm_decoder/weights:0', u'g_rev_lstm_decoder/biases:0', u'g_rev_lstm_decoder/W:0', u'g_rev_lstm_decoder/b:0', u'g_rev_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/kernel:0', u'g_rev_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/bias:0', u'd_rev_embed/W:0', u'd_rev_src_H1_3/weights:0', u'd_rev_src_H1_3/biases:0', u'd_rev_src_H2_3/weights:0', u'd_rev_src_H2_3/biases:0', u'd_rev_src_H3_3/weights:0', u'd_rev_src_H3_3/biases:0', u'd_rev_tgt_H1_3/weights:0', u'd_rev_tgt_H1_3/biases:0', u'd_rev_tgt_H2_3/weights:0', u'd_rev_tgt_H2_3/biases:0', u'd_rev_tgt_H3_3/weights:0', u'd_rev_tgt_H3_3/biases:0', u'Variable:0', u'OptimizeLoss/learning_rate:0', u'OptimizeLoss/beta1_power:0', u'OptimizeLoss/beta2_power:0', u'OptimizeLoss/d_embed/W/Adam:0', u'OptimizeLoss/d_embed/W/Adam_1:0', u'OptimizeLoss/d_src_H1_3/weights/Adam:0', u'OptimizeLoss/d_src_H1_3/weights/Adam_1:0', u'OptimizeLoss/d_src_H1_3/biases/Adam:0', u'OptimizeLoss/d_src_H1_3/biases/Adam_1:0', u'OptimizeLoss/d_src_H2_3/weights/Adam:0', u'OptimizeLoss/d_src_H2_3/weights/Adam_1:0', u'OptimizeLoss/d_src_H2_3/biases/Adam:0', u'OptimizeLoss/d_src_H2_3/biases/Adam_1:0', u'OptimizeLoss/d_src_H3_3/weights/Adam:0', u'OptimizeLoss/d_src_H3_3/weights/Adam_1:0', u'OptimizeLoss/d_src_H3_3/biases/Adam:0', u'OptimizeLoss/d_src_H3_3/biases/Adam_1:0', u'OptimizeLoss/d_tgt_H1_3/weights/Adam:0', u'OptimizeLoss/d_tgt_H1_3/weights/Adam_1:0', u'OptimizeLoss/d_tgt_H1_3/biases/Adam:0', u'OptimizeLoss/d_tgt_H1_3/biases/Adam_1:0', u'OptimizeLoss/d_tgt_H2_3/weights/Adam:0', u'OptimizeLoss/d_tgt_H2_3/weights/Adam_1:0', u'OptimizeLoss/d_tgt_H2_3/biases/Adam:0', u'OptimizeLoss/d_tgt_H2_3/biases/Adam_1:0', u'OptimizeLoss/d_tgt_H3_3/weights/Adam:0', u'OptimizeLoss/d_tgt_H3_3/weights/Adam_1:0', u'OptimizeLoss/d_tgt_H3_3/biases/Adam:0', u'OptimizeLoss/d_tgt_H3_3/biases/Adam_1:0', u'OptimizeLoss/d_rev_embed/W/Adam:0', u'OptimizeLoss/d_rev_embed/W/Adam_1:0', u'OptimizeLoss/d_rev_src_H1_3/weights/Adam:0', u'OptimizeLoss/d_rev_src_H1_3/weights/Adam_1:0', u'OptimizeLoss/d_rev_src_H1_3/biases/Adam:0', u'OptimizeLoss/d_rev_src_H1_3/biases/Adam_1:0', u'OptimizeLoss/d_rev_src_H2_3/weights/Adam:0', u'OptimizeLoss/d_rev_src_H2_3/weights/Adam_1:0', u'OptimizeLoss/d_rev_src_H2_3/biases/Adam:0', u'OptimizeLoss/d_rev_src_H2_3/biases/Adam_1:0', u'OptimizeLoss/d_rev_src_H3_3/weights/Adam:0', u'OptimizeLoss/d_rev_src_H3_3/weights/Adam_1:0', u'OptimizeLoss/d_rev_src_H3_3/biases/Adam:0', u'OptimizeLoss/d_rev_src_H3_3/biases/Adam_1:0', u'OptimizeLoss/d_rev_tgt_H1_3/weights/Adam:0', u'OptimizeLoss/d_rev_tgt_H1_3/weights/Adam_1:0', u'OptimizeLoss/d_rev_tgt_H1_3/biases/Adam:0', u'OptimizeLoss/d_rev_tgt_H1_3/biases/Adam_1:0', u'OptimizeLoss/d_rev_tgt_H2_3/weights/Adam:0', u'OptimizeLoss/d_rev_tgt_H2_3/weights/Adam_1:0', u'OptimizeLoss/d_rev_tgt_H2_3/biases/Adam:0', u'OptimizeLoss/d_rev_tgt_H2_3/biases/Adam_1:0', u'OptimizeLoss/d_rev_tgt_H3_3/weights/Adam:0', u'OptimizeLoss/d_rev_tgt_H3_3/weights/Adam_1:0', u'OptimizeLoss/d_rev_tgt_H3_3/biases/Adam:0', u'OptimizeLoss/d_rev_tgt_H3_3/biases/Adam_1:0', u'OptimizeLoss_1/learning_rate:0', u'OptimizeLoss_1/beta1_power:0', u'OptimizeLoss_1/beta2_power:0', u'OptimizeLoss_1/g_embed/W/Adam:0', u'OptimizeLoss_1/g_embed/W/Adam_1:0', u'OptimizeLoss_1/g_H1_3/weights/Adam:0', u'OptimizeLoss_1/g_H1_3/weights/Adam_1:0', u'OptimizeLoss_1/g_H1_3/biases/Adam:0', u'OptimizeLoss_1/g_H1_3/biases/Adam_1:0', u'OptimizeLoss_1/g_H2_3/weights/Adam:0', u'OptimizeLoss_1/g_H2_3/weights/Adam_1:0', u'OptimizeLoss_1/g_H2_3/biases/Adam:0', u'OptimizeLoss_1/g_H2_3/biases/Adam_1:0', u'OptimizeLoss_1/g_H3_3/weights/Adam:0', u'OptimizeLoss_1/g_H3_3/weights/Adam_1:0', u'OptimizeLoss_1/g_H3_3/biases/Adam:0', u'OptimizeLoss_1/g_H3_3/biases/Adam_1:0', u'OptimizeLoss_1/g_lstm_decoder/weights/Adam:0', u'OptimizeLoss_1/g_lstm_decoder/weights/Adam_1:0', u'OptimizeLoss_1/g_lstm_decoder/biases/Adam:0', u'OptimizeLoss_1/g_lstm_decoder/biases/Adam_1:0', u'OptimizeLoss_1/g_lstm_decoder/W/Adam:0', u'OptimizeLoss_1/g_lstm_decoder/W/Adam_1:0', u'OptimizeLoss_1/g_lstm_decoder/b/Adam:0', u'OptimizeLoss_1/g_lstm_decoder/b/Adam_1:0', u'OptimizeLoss_1/g_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/kernel/Adam:0', u'OptimizeLoss_1/g_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/kernel/Adam_1:0', u'OptimizeLoss_1/g_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/bias/Adam:0', u'OptimizeLoss_1/g_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/bias/Adam_1:0', u'OptimizeLoss_1/g_rev_embed/W/Adam:0', u'OptimizeLoss_1/g_rev_embed/W/Adam_1:0', u'OptimizeLoss_1/g_rev_H1_3/weights/Adam:0', u'OptimizeLoss_1/g_rev_H1_3/weights/Adam_1:0', u'OptimizeLoss_1/g_rev_H1_3/biases/Adam:0', u'OptimizeLoss_1/g_rev_H1_3/biases/Adam_1:0', u'OptimizeLoss_1/g_rev_H2_3/weights/Adam:0', u'OptimizeLoss_1/g_rev_H2_3/weights/Adam_1:0', u'OptimizeLoss_1/g_rev_H2_3/biases/Adam:0', u'OptimizeLoss_1/g_rev_H2_3/biases/Adam_1:0', u'OptimizeLoss_1/g_rev_H3_3/weights/Adam:0', u'OptimizeLoss_1/g_rev_H3_3/weights/Adam_1:0', u'OptimizeLoss_1/g_rev_H3_3/biases/Adam:0', u'OptimizeLoss_1/g_rev_H3_3/biases/Adam_1:0', u'OptimizeLoss_1/g_rev_lstm_decoder/weights/Adam:0', u'OptimizeLoss_1/g_rev_lstm_decoder/weights/Adam_1:0', u'OptimizeLoss_1/g_rev_lstm_decoder/biases/Adam:0', u'OptimizeLoss_1/g_rev_lstm_decoder/biases/Adam_1:0', u'OptimizeLoss_1/g_rev_lstm_decoder/W/Adam:0', u'OptimizeLoss_1/g_rev_lstm_decoder/W/Adam_1:0', u'OptimizeLoss_1/g_rev_lstm_decoder/b/Adam:0', u'OptimizeLoss_1/g_rev_lstm_decoder/b/Adam_1:0', u'OptimizeLoss_1/g_rev_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/kernel/Adam:0', u'OptimizeLoss_1/g_rev_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/kernel/Adam_1:0', u'OptimizeLoss_1/g_rev_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/bias/Adam:0', u'OptimizeLoss_1/g_rev_lstm_decoder/embedding_rnn_decoder/rnn_decoder/lstm_cell/bias/Adam_1:0']
Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./save/rev_model
No reverse model loaded
Starting epoch 0
Validation: loss D -7.420999 loss G 7.194897 
Val Source:how do you play ? _EOS
Val Target :you do n't know how ? _EOS
Val Generated:play the game button , click `` link '' button on youtube video link __url__ _EOS

Val BLEU: 0.159 0.157 0.064 0.016 0.013
Val Rouge: 0.205 0.057 0.015 0.012
Val Entropy: 5.32 6.882 7.285 7.402
Val Diversity: 0.053 0.183 0.253 0.295
Val Relevance(G,A,E): 2.031 0.46 0.301
Val Avg. length: 13.933

Iteration 1: loss D 0.000000 loss G 0.000000
Source:goddamn right . did anyone ever manage to figure out exactly how to get that to work ? _EOS
Target:the timing is actually pretty easy . _EOS
Generated:i do n't know yet . i do n't know who knows yet . it was a bug since it was posted . _EOS

